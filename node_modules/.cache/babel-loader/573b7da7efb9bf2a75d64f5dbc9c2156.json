{"ast":null,"code":"import { serverIpAddress } from './../constanst';\nimport io from 'socket.io-client';\n\nconst _require = require('./networking'),\n      axios = _require.axios;\n\nconst socket = io.connect(serverIpAddress, {\n  upgrade: false,\n  transports: ['websocket']\n});\nexport const getCurrentOrder = (id, callback) => {\n  console.log('id current: ', id);\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/item-orders/\").concat(id);\n  axios.get(url).then(response => {\n    var orders = response.data;\n    orders.sort(function (a, b) {\n      return new Date(a.createAt) - new Date(b.createAt);\n    });\n    callback(orders);\n  });\n};\nexport const createCustomerTable = (payload, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/add\");\n  axios.post(url, payload).then(response => {\n    console.log('Resonse: ', response);\n    socket.emit('clientCreateTable');\n    callback(response.data);\n  });\n};\nexport const getOnlineItemsByNumber = (payload, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/item-orders/getOnlineItemsByNumber\");\n  axios.post(url, payload).then(response => {\n    console.log(response);\n    callback(response.data);\n  });\n};\nexport const submitVoidPayment = (table_id, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/void-payment\");\n  axios.post(url, {\n    table_id\n  }).then(response => {\n    console.log('Resonse: ', response);\n    callback(true, 'ทำการยกเลิกการจ่ายเงินสำเร็จ');\n  }).catch(e => {\n    console.log(e);\n    callback(false, 'เกิดข้อผิดพลาด');\n  });\n};\nexport const closeCustomerTable = customer_table_id => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/close\");\n  axios.post(url, {\n    customer_table_id\n  }).then().catch(err => console.log(err));\n};\nexport const sendNewOrderToServer = ({\n  userId,\n  tableId,\n  items\n}) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/item-orders/add\");\n  axios.post(url, {\n    userId,\n    tableId,\n    items: JSON.stringify(items)\n  }).then(res => {\n    console.log(res);\n  }).catch(err => console.log(err));\n};\nexport const cancelOrder = ({\n  order_id,\n  quantity,\n  remark,\n  create_by\n}, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/item-orders/cancel\");\n  axios.post(url, {\n    order_id,\n    quantity,\n    remark,\n    create_by\n  }).then(res => {\n    console.log(res);\n    callback();\n  }).catch(e => console.log(e.msg));\n};\nexport const checkBill = ({\n  customer_table_id,\n  user_id\n}, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/check-bill\");\n  axios.post(url, {\n    customer_table_id,\n    user_id\n  }).then(res => {\n    callback();\n  }).catch(e => console.log(e));\n};\nexport const getTableLogs = (table_id, callback) => {\n  var logs = [];\n  console.log('Get Table logs', table_id);\n  let url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/get-table-status/\").concat(table_id);\n  axios.get(url).then(res => {\n    for (const status of res.data) {\n      logs.push(status);\n    }\n\n    url = \"\".concat(serverIpAddress, \"api/restaurant/tables/item-orders/get-all-orders-status/\").concat(table_id);\n    axios.get(url).then(res => {\n      for (const status of res.data) {\n        logs.push(status);\n      }\n\n      logs.sort(function (a, b) {\n        return new Date(a.timestamp) - new Date(b.timestamp);\n      });\n      callback(logs);\n    });\n  });\n};\nexport const getTableDiscount = (table_id, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/customer-table-discount/\").concat(table_id);\n  axios.get(url).then(res => {\n    callback(res.data[0]);\n  });\n};\nexport const submitTableDiscount = (table_id, user_id, payload, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/customer-table-discount/\");\n  axios.post(url, {\n    table_id,\n    user_id,\n    payload\n  }).then(res => {\n    if (res.status === 200) {\n      callback();\n    }\n  });\n};\nexport const getCustomerTableInfo = (table_id, callback) => {\n  console.log('getCusomtertrableInfo');\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/\").concat(table_id);\n  axios.get(url).then(data => {\n    console.log(data.data);\n\n    if (data.status === 200) {\n      callback(data.data);\n    } else {\n      console.log(data);\n    }\n  });\n};\nexport const updateRoomDelivery = ({\n  customerTableId,\n  roomDelivery\n}, callback) => {\n  console.log(customerTableId);\n  console.log(roomDelivery);\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/updateRoomDelivery/\");\n  axios.post(url, {\n    customerTableId,\n    roomDelivery\n  }).then(res => {\n    if (res.status === 200) {\n      callback();\n    }\n  });\n};\nexport const getCustomerTablePayment = (table_id, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/payment/\").concat(table_id);\n  axios.get(url).then(data => {\n    if (data.status === 200) {\n      callback(data.data);\n    } else {\n      console.log(data);\n    }\n  });\n};\nexport const completePayment = ({\n  total_amount,\n  receive_amount,\n  method,\n  table_id,\n  user_id,\n  room_number,\n  creditCardType,\n  creditCardNumber,\n  paymentList,\n  service_charge_amount\n}, callback) => {\n  const receive_total_amount = method === 'cash' ? receive_amount : total_amount;\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/complete-payment/\");\n  axios.post(url, {\n    total_amount,\n    receive_amount: receive_total_amount,\n    method,\n    table_id,\n    user_id,\n    room_number,\n    creditCardType,\n    creditCardNumber,\n    paymentList,\n    service_charge_amount\n  }).then(data => {\n    if (data.status === 200) {\n      callback();\n    } else {\n      console.log(data);\n    }\n  });\n};\nexport const transferOrders = ({\n  tableNumber,\n  orders,\n  create_by,\n  transferType,\n  oldTableId,\n  newTable\n}, callback) => {\n  const url = \"\".concat(serverIpAddress, \"api/restaurant/tables/customer-tables/transfer-orders\");\n  axios.post(url, {\n    tableNumber,\n    orders,\n    create_by,\n    oldTableId,\n    transferType,\n    newTable\n  }).then(response => {\n    if (response.status === 200) {\n      callback({\n        status: true\n      });\n    } else {\n      callback({\n        status: false\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/olotem321/jep-cashier-2021-2/src/brains/customerTable.js"],"names":["serverIpAddress","io","require","axios","socket","connect","upgrade","transports","getCurrentOrder","id","callback","console","log","url","get","then","response","orders","data","sort","a","b","Date","createAt","createCustomerTable","payload","post","emit","getOnlineItemsByNumber","submitVoidPayment","table_id","catch","e","closeCustomerTable","customer_table_id","err","sendNewOrderToServer","userId","tableId","items","JSON","stringify","res","cancelOrder","order_id","quantity","remark","create_by","msg","checkBill","user_id","getTableLogs","logs","status","push","timestamp","getTableDiscount","submitTableDiscount","getCustomerTableInfo","updateRoomDelivery","customerTableId","roomDelivery","getCustomerTablePayment","completePayment","total_amount","receive_amount","method","room_number","creditCardType","creditCardNumber","paymentList","service_charge_amount","receive_total_amount","transferOrders","tableNumber","transferType","oldTableId","newTable"],"mappings":"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","sourcesContent":["import  {serverIpAddress} from './../constanst';\r\nimport io from 'socket.io-client';\r\nconst { axios } = require('./networking');\r\n\r\nconst socket = io.connect(serverIpAddress, {upgrade: false, transports: ['websocket']});\r\n\r\nexport const getCurrentOrder = (id, callback) => {\r\n  console.log('id current: ', id);\r\n  const url = `${ serverIpAddress }api/restaurant/tables/item-orders/${id}`;\r\n  axios.get(url).then((response) => {\r\n    var orders = response.data;\r\n    orders.sort(function(a,b){\r\n      return new Date(a.createAt) - new Date(b.createAt);\r\n    });\r\n    callback(orders);\r\n  });\r\n}\r\n\r\nexport const createCustomerTable = (payload, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/add`;\r\n  axios.post(url, payload).then(response => {\r\n    console.log('Resonse: ', response);\r\n    socket.emit('clientCreateTable');\r\n    callback(response.data);\r\n  });\r\n}\r\n\r\nexport const getOnlineItemsByNumber = (payload, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/item-orders/getOnlineItemsByNumber`;\r\n  axios.post(url, payload).then(response => {\r\n    console.log(response);\r\n    callback(response.data);\r\n  });\r\n}\r\n\r\nexport const submitVoidPayment = (table_id, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/void-payment`;\r\n  axios.post(url, {table_id}).then(response => {\r\n    console.log('Resonse: ', response);\r\n    callback(true, 'ทำการยกเลิกการจ่ายเงินสำเร็จ');\r\n  }).catch(e => {\r\n    console.log(e);\r\n    callback(false, 'เกิดข้อผิดพลาด');\r\n  });\r\n}\r\n\r\nexport const closeCustomerTable = (customer_table_id) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/close`;\r\n  axios.post(url, {customer_table_id}).then().catch(err => console.log(err));\r\n}\r\n\r\nexport const sendNewOrderToServer = ({ userId, tableId, items }) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/item-orders/add`;\r\n  axios.post(url, {\r\n    userId, tableId, items: JSON.stringify(items)\r\n  }).then((res) =>{\r\n    console.log(res);\r\n  }).catch(err => console.log(err));\r\n}\r\n\r\nexport const cancelOrder = ({order_id, quantity, remark, create_by}, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/item-orders/cancel`;\r\n  axios.post(url, {\r\n    order_id,\r\n    quantity,\r\n    remark,\r\n    create_by\r\n  }).then((res) => {\r\n    console.log(res);\r\n    callback();\r\n  }).catch(e => console.log(e.msg));\r\n}\r\n\r\nexport const checkBill = ({customer_table_id, user_id}, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/check-bill`;\r\n  axios.post(url, {customer_table_id, user_id}).then(res => {\r\n    callback();\r\n  }).catch(e => console.log(e));\r\n}\r\n\r\nexport const getTableLogs = (table_id, callback) => {\r\n  var logs = [];\r\n  console.log('Get Table logs', table_id);\r\n  let url = `${ serverIpAddress }api/restaurant/tables/customer-tables/get-table-status/${table_id}`;\r\n  axios.get(url).then((res) => {\r\n    for (const status of res.data){\r\n      logs.push(status)\r\n    }\r\n    url = `${ serverIpAddress }api/restaurant/tables/item-orders/get-all-orders-status/${table_id}`;\r\n    axios.get(url).then(res => {\r\n      for(const status of res.data){\r\n        logs.push(status)\r\n      }\r\n      logs.sort(function(a,b){\r\n        return new Date(a.timestamp) - new Date(b.timestamp);\r\n      });\r\n      callback(logs);\r\n    });\r\n  });\r\n}\r\n\r\nexport const getTableDiscount = (table_id, callback) => {\r\n    const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/customer-table-discount/${table_id}`;\r\n    axios.get(url).then((res) => {\r\n      callback(res.data[0]);\r\n    })\r\n}\r\n\r\nexport const submitTableDiscount = (table_id, user_id, payload, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/customer-table-discount/`;\r\n  axios.post(url, {table_id, user_id, payload}).then(res => {\r\n    if(res.status === 200){\r\n      callback();\r\n    }\r\n  })\r\n}\r\n\r\nexport const getCustomerTableInfo = (table_id, callback) => {\r\n  console.log('getCusomtertrableInfo');\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/${ table_id}`;\r\n  axios.get(url).then((data) => {\r\n    console.log(data.data);\r\n    if(data.status === 200){\r\n      callback(data.data);\r\n    }else{\r\n      console.log(data);\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const updateRoomDelivery = ({customerTableId, roomDelivery} , callback) => {\r\n  console.log(customerTableId);\r\n  console.log(roomDelivery);\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/updateRoomDelivery/`;\r\n  axios.post(url, {customerTableId, roomDelivery}).then(res => {\r\n    if(res.status === 200){\r\n      callback();\r\n    }\r\n  })\r\n}\r\n\r\nexport const getCustomerTablePayment = (table_id, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/payment/${ table_id}`;\r\n  axios.get(url).then((data) => {\r\n    if(data.status === 200){\r\n      callback(data.data);\r\n    }else{\r\n      console.log(data);\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const completePayment = ({\r\n  total_amount,\r\n  receive_amount,\r\n  method,\r\n  table_id,\r\n  user_id,\r\n  room_number,\r\n  creditCardType,\r\n  creditCardNumber,\r\n  paymentList,\r\n  service_charge_amount\r\n}, callback) => {\r\n\r\n  const receive_total_amount = method === 'cash' ? receive_amount : total_amount;\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/complete-payment/`;\r\n  axios.post(url, {total_amount,\r\n  receive_amount: receive_total_amount,\r\n  method,\r\n  table_id,\r\n  user_id,\r\nroom_number,\r\ncreditCardType,\r\ncreditCardNumber,\r\npaymentList,\r\nservice_charge_amount\r\n}).then(data => {\r\n    if(data.status === 200){\r\n      callback();\r\n    }else{\r\n      console.log(data);\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const transferOrders = ({\r\n  tableNumber,\r\n  orders,\r\n  create_by,\r\n  transferType,\r\n  oldTableId,\r\n  newTable\r\n}, callback) => {\r\n  const url = `${ serverIpAddress }api/restaurant/tables/customer-tables/transfer-orders`;\r\n  axios.post( url, {tableNumber, orders, create_by, oldTableId, transferType, newTable} ).then((response) => {\r\n    if(response.status === 200){\r\n      callback({\r\n        status: true\r\n      })\r\n    }else{\r\n      callback({\r\n        status: false\r\n      })\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}