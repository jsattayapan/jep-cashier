{"ast":null,"code":"import _defineProperty from \"/home/olotem321/jep-cashier-2021-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/olotem321/jep-cashier-2021-2/src/screens/Playground.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport uuid from 'uuid';\nimport { createStore, combineReducers } from 'redux';\nexport class Playground extends React.Component {\n  render() {\n    const addExpense = ({\n      description = '',\n      note = '',\n      amount = 0,\n      createAt = 0\n    } = {}) => ({\n      type: 'ADD_EXPENSE',\n      expense: {\n        id: uuid(),\n        description,\n        note,\n        amount,\n        createAt\n      }\n    });\n\n    const removeExpense = ({\n      id\n    }) => ({\n      type: 'REMOVE_EXPENSE',\n      id\n    });\n\n    const editExpense = (id, updates) => ({\n      type: 'EDIT_EXPENSE',\n      id,\n      updates\n    });\n\n    const expenseReducerDefaultState = [];\n\n    const expenseReducer = (state = expenseReducerDefaultState, action) => {\n      switch (action.type) {\n        case 'ADD_EXPENSE':\n          return [...state, action.expense];\n\n        case 'REMOVE_EXPENSE':\n          return state.filter(({\n            id\n          }) => id !== action.id);\n\n        case 'EDIT_EXPENSE':\n          return state.map(expense => expense.id === action.id ? _objectSpread({}, expense, {}, action.updates) : expense);\n\n        default:\n          return state;\n      }\n    }; // Filters Reducer\n\n\n    const filterReducerDefaultState = {\n      text: '',\n      sortBy: 'date',\n      startDate: undefined,\n      endDate: undefined\n    };\n\n    const setTextFilter = text => ({\n      type: 'SET_TEXT_FILTER',\n      text\n    });\n\n    const sortByDate = () => ({\n      type: 'SORT_BY_DATE'\n    });\n\n    const sortByAmount = () => ({\n      type: 'SORT_BY_AMOUNT'\n    });\n\n    const setStartDate = (date = undefined) => ({\n      type: 'SET_START_DATE',\n      date\n    });\n\n    const setEndDate = (date = undefined) => ({\n      type: 'SET_END_DATE',\n      date\n    });\n\n    const filterReducer = (state = filterReducerDefaultState, action) => {\n      switch (action.type) {\n        case 'SET_TEXT_FILTER':\n          return _objectSpread({}, state, {\n            text: action.text\n          });\n\n        case 'SORT_BY_DATE':\n          return _objectSpread({}, state, {\n            sortBy: 'date'\n          });\n\n        case 'SORT_BY_AMOUNT':\n          return _objectSpread({}, state, {\n            sortBy: 'amount'\n          });\n\n        case 'SET_START_DATE':\n          return _objectSpread({}, state, {\n            startDate: action.date\n          });\n\n        case 'SET_END_DATE':\n          return _objectSpread({}, state, {\n            endDate: action.date\n          });\n\n        default:\n          return state;\n      }\n    }; //Store creation\n\n\n    const store = createStore(combineReducers({\n      expense: expenseReducer,\n      filter: filterReducer\n    }));\n    store.subscribe(() => {\n      console.log(store.getState());\n    }); // const expenseOne = store.dispatch(addExpense({ description: 'Rent', amount: 1000 }));\n    // const expenseTwo = store.dispatch(addExpense({ description: 'Coffee', amount: 1500 }));\n    //\n    // store.dispatch(removeExpense({ id: expenseOne.expense.id }));\n    // store.dispatch(editExpense(expenseTwo.expense.id, { amount: 400 }));\n    //\n    // store.dispatch(setTextFilter('Rent'));\n    // store.dispatch(setTextFilter(''));\n    //\n    // store.dispatch(sortByAmount());\n    // store.dispatch(sortByDate());\n\n    store.dispatch(setStartDate(125));\n    store.dispatch(setStartDate());\n    store.dispatch(setEndDate(300));\n    store.dispatch(setEndDate());\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/olotem321/jep-cashier-2021-2/src/screens/Playground.js"],"names":["React","uuid","createStore","combineReducers","Playground","Component","render","addExpense","description","note","amount","createAt","type","expense","id","removeExpense","editExpense","updates","expenseReducerDefaultState","expenseReducer","state","action","filter","map","filterReducerDefaultState","text","sortBy","startDate","undefined","endDate","setTextFilter","sortByDate","sortByAmount","setStartDate","date","setEndDate","filterReducer","store","subscribe","console","log","getState","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport uuid from 'uuid';\r\nimport { createStore, combineReducers } from 'redux';\r\n\r\nexport class Playground extends React.Component{\r\n  render(){\r\n    const addExpense = (\r\n    {\r\n      description = '',\r\n      note = '',\r\n      amount = 0,\r\n      createAt = 0\r\n    } = {}\r\n  ) => ({\r\n      type: 'ADD_EXPENSE',\r\n      expense: {\r\n        id: uuid(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createAt\r\n      }\r\n    });\r\n\r\n    const removeExpense = ({ id }) => ({\r\n      type: 'REMOVE_EXPENSE',\r\n      id\r\n    });\r\n\r\n    const editExpense = (id, updates) => ({\r\n      type: 'EDIT_EXPENSE',\r\n      id,\r\n      updates\r\n    });\r\n\r\n    const expenseReducerDefaultState = [];\r\n\r\n    const expenseReducer = (state = expenseReducerDefaultState, action) => {\r\n      switch (action.type){\r\n        case 'ADD_EXPENSE':\r\n          return [\r\n            ...state,\r\n            action.expense\r\n          ];\r\n        case 'REMOVE_EXPENSE':\r\n          return state.filter(({ id }) => id !== action.id );\r\n        case 'EDIT_EXPENSE':\r\n          return state.map(expense => expense.id === action.id ? {...expense, ...action.updates} : expense );\r\n        default:\r\n          return state;\r\n      }\r\n    };\r\n\r\n    // Filters Reducer\r\n    const filterReducerDefaultState = {\r\n      text: '',\r\n      sortBy: 'date',\r\n      startDate: undefined,\r\n      endDate: undefined\r\n    };\r\n\r\n    const setTextFilter = (text) => ({\r\n      type: 'SET_TEXT_FILTER',\r\n      text\r\n    });\r\n\r\n    const sortByDate = () => ({\r\n      type: 'SORT_BY_DATE'\r\n    });\r\n\r\n    const sortByAmount = () => ({\r\n      type: 'SORT_BY_AMOUNT'\r\n    });\r\n\r\n    const setStartDate = (date = undefined) => ({\r\n      type: 'SET_START_DATE',\r\n      date\r\n    });\r\n\r\n    const setEndDate = (date = undefined) => ({\r\n      type: 'SET_END_DATE',\r\n      date\r\n    });\r\n\r\n    const filterReducer = (state = filterReducerDefaultState, action) => {\r\n      switch (action.type){\r\n        case 'SET_TEXT_FILTER':\r\n          return {...state, text: action.text};\r\n        case 'SORT_BY_DATE':\r\n          return {...state, sortBy: 'date'};\r\n        case 'SORT_BY_AMOUNT':\r\n          return {...state, sortBy: 'amount'};\r\n        case 'SET_START_DATE':\r\n          return {...state, startDate: action.date};\r\n        case 'SET_END_DATE':\r\n          return {...state, endDate: action.date};\r\n        default:\r\n          return state;\r\n      }\r\n    };\r\n\r\n    //Store creation\r\n    const store = createStore(\r\n      combineReducers({\r\n        expense: expenseReducer,\r\n        filter: filterReducer\r\n      })\r\n    );\r\n\r\n    store.subscribe(() => {\r\n      console.log(store.getState());\r\n    });\r\n\r\n    // const expenseOne = store.dispatch(addExpense({ description: 'Rent', amount: 1000 }));\r\n    // const expenseTwo = store.dispatch(addExpense({ description: 'Coffee', amount: 1500 }));\r\n    //\r\n    // store.dispatch(removeExpense({ id: expenseOne.expense.id }));\r\n    // store.dispatch(editExpense(expenseTwo.expense.id, { amount: 400 }));\r\n    //\r\n    // store.dispatch(setTextFilter('Rent'));\r\n    // store.dispatch(setTextFilter(''));\r\n    //\r\n    // store.dispatch(sortByAmount());\r\n    // store.dispatch(sortByDate());\r\n\r\n    store.dispatch(setStartDate(125));\r\n    store.dispatch(setStartDate());\r\n\r\n    store.dispatch(setEndDate(300));\r\n    store.dispatch(setEndDate());\r\n\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}