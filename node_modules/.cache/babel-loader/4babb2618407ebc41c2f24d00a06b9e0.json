{"ast":null,"code":"import _defineProperty from \"/home/olotem321/jep-cashier-2021-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst customerTableReducerDefaultState = {};\nexport default ((state = customerTableReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_SELECTED_TABLE':\n      return action.payload;\n\n    case 'LOAD_TABLES_LOGS':\n      return _objectSpread({}, state, {\n        logs: action.logs\n      });\n\n    case 'LOAD_CURRENT_ORDERS':\n      return _objectSpread({}, state, {\n        currentOrders: action.orders\n      });\n\n    case 'SET_TABLE_STATUS':\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case 'SET_TABLE_ROOM_DELIVERY':\n      return _objectSpread({}, state, {\n        roomDelivery: action.roomDelivery\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/olotem321/jep-cashier-2021-2/src/Redux/reducers/customerTable.js"],"names":["customerTableReducerDefaultState","state","action","type","payload","logs","currentOrders","orders","status","roomDelivery"],"mappings":";;;;;;AAAA,MAAMA,gCAAgC,GAAG,EAAzC;AAEA,gBAAe,CAACC,KAAK,GAAGD,gCAAT,EAA2CE,MAA3C,KAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF,SAAK,kBAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAFf;;AAIF,SAAK,qBAAL;AACE,+BACKJ,KADL;AAEEK,QAAAA,aAAa,EAAEJ,MAAM,CAACK;AAFxB;;AAIF,SAAK,kBAAL;AACA,+BACKN,KADL;AAEEO,QAAAA,MAAM,EAAEN,MAAM,CAACM;AAFjB;;AAIA,SAAK,yBAAL;AACA,+BACKP,KADL;AAEEQ,QAAAA,YAAY,EAAEP,MAAM,CAACO;AAFvB;;AAIA;AACE,aAAOR,KAAP;AAxBJ;AA0BD,CA3BD","sourcesContent":["const customerTableReducerDefaultState = {};\r\n\r\nexport default (state = customerTableReducerDefaultState, action) => {\r\n  switch (action.type){\r\n    case 'SET_SELECTED_TABLE':\r\n      return action.payload;\r\n    case 'LOAD_TABLES_LOGS':\r\n      return {\r\n        ...state,\r\n        logs: action.logs\r\n      };\r\n    case 'LOAD_CURRENT_ORDERS':\r\n      return {\r\n        ...state,\r\n        currentOrders: action.orders\r\n      }\r\n    case 'SET_TABLE_STATUS':\r\n    return {\r\n      ...state,\r\n      status: action.status\r\n    }\r\n    case 'SET_TABLE_ROOM_DELIVERY':\r\n    return {\r\n      ...state,\r\n      roomDelivery: action.roomDelivery\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}